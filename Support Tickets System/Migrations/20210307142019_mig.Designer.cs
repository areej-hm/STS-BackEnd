// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Support_Tickets_System;

namespace Support_Tickets_System.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210307142019_mig")]
    partial class mig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Support_Tickets_System.Entities.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("ClientTypeId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClientAddress = "jenin",
                            ClientName = "Admin",
                            ClientPhone = "059538212",
                            ClientTypeId = 1,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 45, DateTimeKind.Local).AddTicks(8254),
                            Password = "123456",
                            UserName = "admin"
                        },
                        new
                        {
                            ID = 2,
                            ClientAddress = "jenin",
                            ClientName = "Areej haj",
                            ClientPhone = "059538212",
                            ClientTypeId = 2,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 51, DateTimeKind.Local).AddTicks(7060),
                            Password = "123456",
                            UserName = "areej77"
                        },
                        new
                        {
                            ID = 3,
                            ClientAddress = "tulkarm",
                            ClientName = "Ahmad haj",
                            ClientPhone = "059538212",
                            ClientTypeId = 2,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 51, DateTimeKind.Local).AddTicks(7185),
                            Password = "123456",
                            UserName = "ahmad11h"
                        });
                });

            modelBuilder.Entity("Support_Tickets_System.Entities.ClientType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("NameType")
                        .IsUnique();

                    b.ToTable("ClientsType");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NameType = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            NameType = "Client"
                        });
                });

            modelBuilder.Entity("Support_Tickets_System.Entities.Tickets", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TicketName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TicketNumber")
                        .HasColumnType("int");

                    b.Property<string>("TicketType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ClientId");

                    b.HasIndex("TicketNumber")
                        .IsUnique();

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClientId = 2,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(5595),
                            EndDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(6081),
                            Note = "vip",
                            StartDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(6544),
                            TicketName = "Franch",
                            TicketNumber = 100001,
                            TicketType = "Round-trip"
                        },
                        new
                        {
                            ID = 2,
                            ClientId = 2,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8489),
                            EndDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8515),
                            Note = "vip",
                            StartDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8527),
                            TicketName = "jordan",
                            TicketNumber = 100002,
                            TicketType = "Round-trip"
                        },
                        new
                        {
                            ID = 3,
                            ClientId = 3,
                            CreationDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8575),
                            EndDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8578),
                            Note = "normal",
                            StartDate = new DateTime(2021, 3, 7, 16, 20, 19, 54, DateTimeKind.Local).AddTicks(8581),
                            TicketName = "iraq",
                            TicketNumber = 100003,
                            TicketType = "On way only"
                        });
                });

            modelBuilder.Entity("Support_Tickets_System.Entities.Client", b =>
                {
                    b.HasOne("Support_Tickets_System.Entities.ClientType", "ClientType")
                        .WithMany()
                        .HasForeignKey("ClientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientType");
                });

            modelBuilder.Entity("Support_Tickets_System.Entities.Tickets", b =>
                {
                    b.HasOne("Support_Tickets_System.Entities.Client", "Client")
                        .WithMany("Tickets")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Support_Tickets_System.Entities.Client", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
